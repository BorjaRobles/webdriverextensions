package ${siteObject.packageName};

#foreach($page in $pages)
import ${page.packageName}.${page.className};
#end
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.support.ui.LoadableComponent;

public abstract class ${siteObject.className}<P extends ${siteObject.className}<P>> extends LoadableComponent<P> {
    // Declare WebDriver
    private WebDriver driver;

    // Declare Page Objects
#foreach($page in $pages)
    public ${page.className} ${page.fieldName};
#end

    public ${siteObject.className}(WebDriver driver) {        
        // Set WebDriver
        this.driver = driver;        
        
        // Instantiate Page Objects
#foreach($page in $pages)
        ${page.fieldName} = new ${page.className}(driver);
#end
    }

    public WebDriver getDriver() {
        return driver;
    }

    public abstract String getUrl();

    @Override
    public void load() {
        driver.get(getUrl());
    }

    @Override
    public abstract void isLoaded() throws Error;

}
